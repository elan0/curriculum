■ 開発
:ウォーターフォール開発　
	開発手順を1つずつ確認しながら工程を進める
:アジャイル開発
	最低限のものから順番に開発していくもの
:マイグレーション
	システムの完全入れ替え
:デグレーション
	デグレ、改悪
:デプロイ
	ユーザーが使える状態にする作業
	リリースともいう
:コンフリクト
	同じ資源(データ)を使用して動作が衝突する事
:環境
	開発する時
:開発環境（ローカル）
	作る側がテストを行う環境
:検証環境（ステージング）
	ユーザーが使う状態に近い環境で作ること
:本番環境
	ユーザーに実際に利用してもらいながらバグチェック
:設計書／仕様書
	開発内容の図面/開発の流れ
:要件定義
	クライアントの要望をまとめたもの
:基本設計書
	大まかな全体の設計書
:詳細設計書
	具体的な開発内容が書かれたもの
:テスト
	エラーがあるかを検証するもの
:単体テスト（UT）
	各部品ごとに動作確認
:結合テスト（CT／IT）
	複数の部品を繋げて行うテスト
:総合テスト（ST）
	最終的な状態でのテスト
:エビデンス／証跡
	テストの結果を記したもの
:データパッチ
	ソフトに変更を加えるための後付けプログラム
:Access
	Microsoftのツールの一つ
	データの加、分析が出来る
:マクロ
	Excelのプログラム
:VBA
	Excelのプログラム
:GAS（Google Apps Script）
	Googleが出してる言語
:API
	言語用の外部機能
:WEB API
	呼ばれるシステム、もしくはその間の
	機能
:REST API
	URLですべてのリソースを一意に示すもの
:SOAP
	異なるコンピューターで動作するプログラム
	がネットワークで連係動作をするための規約
:Ajax
	一つのhttpでデータの送受信を完了させられるシステム
:XML
	htmlのようなデータの保存方法
:JSON
	JavaScript用のデータ交換フォーマット
:ステータスコード
	httpの結果が返ってくるコード
:クロスオリジン（Cross-Origin）／CORS（Cross-Origin Resource Sharing）
	コーズと呼ばれている
	JavaScriptで送受信時のデーの制限を解除するもの
:バリデーション
	記述内容が要件を満たしているかの確認
:データ連携
	格納方法が違うフォーマットを変換してつなげる
:Daemon
	Unix系のOSでバックグラウンドで動くプログラム
:CRON
	定期的に起動するOSプログラムの一種

:バッチ
	複数のプログラムを一つにまとめたもの
:ログ
	通信
:CSV
	ファイル形式、カンマ区切りでデータが入力される
:TSV
	表形式で保存するデータ形式
:プルリクエスト（マージリクエスト）
	コードの変更を伝える機能
	変更点を見ながらエラーを探せる
■ チケット管理ツール
:asana
	プロジェクトを管理するためのツール
:Backlog
	
:Jooto
:Readmine
:Trello
■ バージョン管理
:集中型
:分散型
:Github
:Backlog
:SourceTree
:Tortoise SVN
:Git Flow
:master
:release
:develop
:feature
■ FW／ライブラリ
:FW
:Spring Framework
:Struts
:JSF（Java Server Faces）
:ライブラリ
:Bootstrap
:Flyway
:Jackson
:jQuery
:Junit
:Log4j
:Lombok
:ORM
■ 連絡ツール
:ChatWork
:Slack
:IP Messenger
■ Java
:Javadoc
:アノテーション
:メモリ管理
:ヒープ
:GC
:GoF
:デザインパターン
■ その他
:オブジェクト指向
:バッチ処理
:コンパイル
:カバレッジ
:プラットホーム